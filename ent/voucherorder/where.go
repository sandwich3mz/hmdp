// Code generated by ent, DO NOT EDIT.

package voucherorder

import (
	"hmdp/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldUserID, v))
}

// VoucherID applies equality check predicate on the "voucher_id" field. It's identical to VoucherIDEQ.
func VoucherID(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldVoucherID, v))
}

// PayType applies equality check predicate on the "pay_type" field. It's identical to PayTypeEQ.
func PayType(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldPayType, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldStatus, v))
}

// PayTime applies equality check predicate on the "pay_time" field. It's identical to PayTimeEQ.
func PayTime(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldPayTime, v))
}

// UseTime applies equality check predicate on the "use_time" field. It's identical to UseTimeEQ.
func UseTime(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldUseTime, v))
}

// RefundTime applies equality check predicate on the "refund_time" field. It's identical to RefundTimeEQ.
func RefundTime(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldRefundTime, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldUpdateTime, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldUserID, v))
}

// VoucherIDEQ applies the EQ predicate on the "voucher_id" field.
func VoucherIDEQ(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldVoucherID, v))
}

// VoucherIDNEQ applies the NEQ predicate on the "voucher_id" field.
func VoucherIDNEQ(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldVoucherID, v))
}

// VoucherIDIn applies the In predicate on the "voucher_id" field.
func VoucherIDIn(vs ...uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldVoucherID, vs...))
}

// VoucherIDNotIn applies the NotIn predicate on the "voucher_id" field.
func VoucherIDNotIn(vs ...uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldVoucherID, vs...))
}

// VoucherIDGT applies the GT predicate on the "voucher_id" field.
func VoucherIDGT(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldVoucherID, v))
}

// VoucherIDGTE applies the GTE predicate on the "voucher_id" field.
func VoucherIDGTE(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldVoucherID, v))
}

// VoucherIDLT applies the LT predicate on the "voucher_id" field.
func VoucherIDLT(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldVoucherID, v))
}

// VoucherIDLTE applies the LTE predicate on the "voucher_id" field.
func VoucherIDLTE(v uint64) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldVoucherID, v))
}

// PayTypeEQ applies the EQ predicate on the "pay_type" field.
func PayTypeEQ(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldPayType, v))
}

// PayTypeNEQ applies the NEQ predicate on the "pay_type" field.
func PayTypeNEQ(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldPayType, v))
}

// PayTypeIn applies the In predicate on the "pay_type" field.
func PayTypeIn(vs ...int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldPayType, vs...))
}

// PayTypeNotIn applies the NotIn predicate on the "pay_type" field.
func PayTypeNotIn(vs ...int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldPayType, vs...))
}

// PayTypeGT applies the GT predicate on the "pay_type" field.
func PayTypeGT(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldPayType, v))
}

// PayTypeGTE applies the GTE predicate on the "pay_type" field.
func PayTypeGTE(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldPayType, v))
}

// PayTypeLT applies the LT predicate on the "pay_type" field.
func PayTypeLT(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldPayType, v))
}

// PayTypeLTE applies the LTE predicate on the "pay_type" field.
func PayTypeLTE(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldPayType, v))
}

// PayTypeIsNil applies the IsNil predicate on the "pay_type" field.
func PayTypeIsNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIsNull(FieldPayType))
}

// PayTypeNotNil applies the NotNil predicate on the "pay_type" field.
func PayTypeNotNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotNull(FieldPayType))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int8) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotNull(FieldStatus))
}

// PayTimeEQ applies the EQ predicate on the "pay_time" field.
func PayTimeEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldPayTime, v))
}

// PayTimeNEQ applies the NEQ predicate on the "pay_time" field.
func PayTimeNEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldPayTime, v))
}

// PayTimeIn applies the In predicate on the "pay_time" field.
func PayTimeIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldPayTime, vs...))
}

// PayTimeNotIn applies the NotIn predicate on the "pay_time" field.
func PayTimeNotIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldPayTime, vs...))
}

// PayTimeGT applies the GT predicate on the "pay_time" field.
func PayTimeGT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldPayTime, v))
}

// PayTimeGTE applies the GTE predicate on the "pay_time" field.
func PayTimeGTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldPayTime, v))
}

// PayTimeLT applies the LT predicate on the "pay_time" field.
func PayTimeLT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldPayTime, v))
}

// PayTimeLTE applies the LTE predicate on the "pay_time" field.
func PayTimeLTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldPayTime, v))
}

// PayTimeIsNil applies the IsNil predicate on the "pay_time" field.
func PayTimeIsNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIsNull(FieldPayTime))
}

// PayTimeNotNil applies the NotNil predicate on the "pay_time" field.
func PayTimeNotNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotNull(FieldPayTime))
}

// UseTimeEQ applies the EQ predicate on the "use_time" field.
func UseTimeEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldUseTime, v))
}

// UseTimeNEQ applies the NEQ predicate on the "use_time" field.
func UseTimeNEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldUseTime, v))
}

// UseTimeIn applies the In predicate on the "use_time" field.
func UseTimeIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldUseTime, vs...))
}

// UseTimeNotIn applies the NotIn predicate on the "use_time" field.
func UseTimeNotIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldUseTime, vs...))
}

// UseTimeGT applies the GT predicate on the "use_time" field.
func UseTimeGT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldUseTime, v))
}

// UseTimeGTE applies the GTE predicate on the "use_time" field.
func UseTimeGTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldUseTime, v))
}

// UseTimeLT applies the LT predicate on the "use_time" field.
func UseTimeLT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldUseTime, v))
}

// UseTimeLTE applies the LTE predicate on the "use_time" field.
func UseTimeLTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldUseTime, v))
}

// UseTimeIsNil applies the IsNil predicate on the "use_time" field.
func UseTimeIsNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIsNull(FieldUseTime))
}

// UseTimeNotNil applies the NotNil predicate on the "use_time" field.
func UseTimeNotNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotNull(FieldUseTime))
}

// RefundTimeEQ applies the EQ predicate on the "refund_time" field.
func RefundTimeEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldRefundTime, v))
}

// RefundTimeNEQ applies the NEQ predicate on the "refund_time" field.
func RefundTimeNEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldRefundTime, v))
}

// RefundTimeIn applies the In predicate on the "refund_time" field.
func RefundTimeIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldRefundTime, vs...))
}

// RefundTimeNotIn applies the NotIn predicate on the "refund_time" field.
func RefundTimeNotIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldRefundTime, vs...))
}

// RefundTimeGT applies the GT predicate on the "refund_time" field.
func RefundTimeGT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldRefundTime, v))
}

// RefundTimeGTE applies the GTE predicate on the "refund_time" field.
func RefundTimeGTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldRefundTime, v))
}

// RefundTimeLT applies the LT predicate on the "refund_time" field.
func RefundTimeLT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldRefundTime, v))
}

// RefundTimeLTE applies the LTE predicate on the "refund_time" field.
func RefundTimeLTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldRefundTime, v))
}

// RefundTimeIsNil applies the IsNil predicate on the "refund_time" field.
func RefundTimeIsNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIsNull(FieldRefundTime))
}

// RefundTimeNotNil applies the NotNil predicate on the "refund_time" field.
func RefundTimeNotNil() predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotNull(FieldRefundTime))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.VoucherOrder {
	return predicate.VoucherOrder(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.VoucherOrder) predicate.VoucherOrder {
	return predicate.VoucherOrder(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.VoucherOrder) predicate.VoucherOrder {
	return predicate.VoucherOrder(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.VoucherOrder) predicate.VoucherOrder {
	return predicate.VoucherOrder(func(s *sql.Selector) {
		p(s.Not())
	})
}
